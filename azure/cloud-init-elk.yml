#cloud-config
package_update: true
package_upgrade: true

packages:
  - apt-transport-https
  - ca-certificates
  - curl
  - gnupg-agent
  - software-properties-common
  - docker.io
  - docker-compose
  - nginx
  - certbot
  - python3-certbot-nginx

write_files:
  - path: /home/noventadmin/docker-compose.yml
    content: |
      version: '3.8'
      
      services:
        elasticsearch:
          image: docker.elastic.co/elasticsearch/elasticsearch:8.10.4
          container_name: elasticsearch
          environment:
            - node.name=elasticsearch
            - cluster.name=es-docker-cluster
            - discovery.type=single-node
            - bootstrap.memory_lock=true
            - "ES_JAVA_OPTS=-Xms1g -Xmx1g"
            - xpack.security.enabled=true
            - ELASTIC_PASSWORD=${ELASTIC_PASSWORD}
          ulimits:
            memlock:
              soft: -1
              hard: -1
          volumes:
            - elasticsearch-data:/usr/share/elasticsearch/data
          ports:
            - "9200:9200"
          networks:
            - elk
          restart: unless-stopped
      
        logstash:
          image: docker.elastic.co/logstash/logstash:8.10.4
          container_name: logstash
          volumes:
            - ./logstash/pipeline:/usr/share/logstash/pipeline
            - ./logstash/config/logstash.yml:/usr/share/logstash/config/logstash.yml
          ports:
            - "5044:5044"
            - "5000:5000/tcp"
            - "5000:5000/udp"
            - "9600:9600"
          environment:
            LS_JAVA_OPTS: "-Xmx512m -Xms512m"
            ELASTIC_PASSWORD: ${ELASTIC_PASSWORD}
          networks:
            - elk
          depends_on:
            - elasticsearch
          restart: unless-stopped
      
        kibana:
          image: docker.elastic.co/kibana/kibana:8.10.4
          container_name: kibana
          ports:
            - "5601:5601"
          environment:
            - ELASTICSEARCH_URL=http://elasticsearch:9200
            - ELASTICSEARCH_HOSTS=http://elasticsearch:9200
            - ELASTICSEARCH_USERNAME=elastic
            - ELASTICSEARCH_PASSWORD=${ELASTIC_PASSWORD}
          networks:
            - elk
          depends_on:
            - elasticsearch
          restart: unless-stopped
      
        filebeat:
          image: docker.elastic.co/beats/filebeat:8.10.4
          container_name: filebeat
          volumes:
            - ./filebeat/filebeat.yml:/usr/share/filebeat/filebeat.yml:ro
            - /var/lib/docker/containers:/var/lib/docker/containers:ro
            - /var/run/docker.sock:/var/run/docker.sock:ro
            - ./logs:/logs:ro
          environment:
            - ELASTICSEARCH_HOSTS=http://elasticsearch:9200
            - ELASTICSEARCH_USERNAME=elastic
            - ELASTICSEARCH_PASSWORD=${ELASTIC_PASSWORD}
            - KIBANA_HOST=http://kibana:5601
          networks:
            - elk
          depends_on:
            - elasticsearch
            - kibana
          restart: unless-stopped
      
      networks:
        elk:
          driver: bridge
      
      volumes:
        elasticsearch-data:

  - path: /home/noventadmin/logstash/config/logstash.yml
    content: |
      http.host: "0.0.0.0"
      xpack.monitoring.elasticsearch.hosts: [ "http://elasticsearch:9200" ]
      xpack.monitoring.elasticsearch.username: elastic
      xpack.monitoring.elasticsearch.password: ${ELASTIC_PASSWORD}

  - path: /home/noventadmin/logstash/pipeline/logstash.conf
    content: |
      input {
        beats {
          port => 5044
        }
        tcp {
          port => 5000
          codec => json
        }
        udp {
          port => 5000
          codec => json
        }
      }
      
      filter {
        if [type] == "erp-api" {
          json {
            source => "message"
          }
          
          # Kritik hataları işaretleme
          if [level] == "error" or [level] == "fatal" {
            mutate {
              add_field => { "is_critical" => true }
            }
          }
        }
      }
      
      output {
        elasticsearch {
          hosts => ["http://elasticsearch:9200"]
          user => "elastic"
          password => "${ELASTIC_PASSWORD}"
          index => "erp-api-%{+YYYY.MM.dd}"
        }
        
        # Kritik hataları Slack'e gönderme
        if [is_critical] == true {
          http {
            url => "https://hooks.slack.com/services/YOUR_SLACK_WEBHOOK_URL"
            http_method => "post"
            content_type => "application/json"
            format => "json"
            mapping => {
              "text" => "Kritik Hata: %{message}"
              "username" => "ERP API Monitoring"
              "icon_emoji" => ":warning:"
              "attachments" => [
                {
                  "color" => "danger",
                  "title" => "Hata Detayları",
                  "text" => "Seviye: %{level}\nZaman: %{@timestamp}\nKaynak: %{source}\nHata: %{message}"
                }
              ]
            }
          }
        }
      }

  - path: /home/noventadmin/filebeat/filebeat.yml
    content: |
      filebeat.inputs:
      - type: log
        enabled: true
        paths:
          - /logs/*.log
        json.keys_under_root: true
        json.add_error_key: true
        json.message_key: message
      
      filebeat.config.modules:
        path: ${path.config}/modules.d/*.yml
        reload.enabled: false
      
      setup.dashboards.enabled: true
      setup.kibana:
        host: "${KIBANA_HOST}"
      
      output.elasticsearch:
        hosts: ["${ELASTICSEARCH_HOSTS}"]
        username: "${ELASTICSEARCH_USERNAME}"
        password: "${ELASTICSEARCH_PASSWORD}"
        indices:
          - index: "filebeat-%{[agent.version]}-%{+yyyy.MM.dd}"
      
      processors:
        - add_host_metadata: ~
        - add_cloud_metadata: ~
        - add_docker_metadata: ~
        - add_kubernetes_metadata: ~
      
      logging.level: info
      logging.to_files: true
      logging.files:
        path: /var/log/filebeat
        name: filebeat
        keepfiles: 7
        permissions: 0644

  - path: /etc/nginx/sites-available/monitor.novent.com.tr
    content: |
      server {
          listen 80;
          server_name monitor.novent.com.tr;
          
          location / {
              proxy_pass http://localhost:5601;
              proxy_http_version 1.1;
              proxy_set_header Upgrade $http_upgrade;
              proxy_set_header Connection 'upgrade';
              proxy_set_header Host $host;
              proxy_cache_bypass $http_upgrade;
              proxy_set_header X-Real-IP $remote_addr;
              proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
              proxy_set_header X-Forwarded-Proto $scheme;
              
              # Basic auth
              auth_basic "Restricted Access";
              auth_basic_user_file /etc/nginx/.htpasswd;
          }
      }

  - path: /home/noventadmin/.env
    content: |
      ELASTIC_PASSWORD=REPLACE_WITH_SECURE_ELASTIC_PASSWORD
      KIBANA_PASSWORD=REPLACE_WITH_SECURE_KIBANA_PASSWORD

  - path: /home/noventadmin/setup-elk.sh
    permissions: '0755'
    content: |
      #!/bin/bash
      
      # Dizinleri oluştur
      mkdir -p /home/noventadmin/logstash/pipeline
      mkdir -p /home/noventadmin/logstash/config
      mkdir -p /home/noventadmin/filebeat
      mkdir -p /home/noventadmin/logs
      
      # Nginx için basic auth oluştur
      echo "noventadmin:$(openssl passwd -apr1 REPLACE_WITH_SECURE_PASSWORD)" > /etc/nginx/.htpasswd
      
      # Nginx site'ını etkinleştir
      ln -s /etc/nginx/sites-available/monitor.novent.com.tr /etc/nginx/sites-enabled/
      
      # Nginx'i yeniden başlat
      systemctl restart nginx
      
      # Let's Encrypt sertifikası al
      certbot --nginx -d monitor.novent.com.tr --non-interactive --agree-tos -m admin@novent.com.tr
      
      # Docker Compose'u başlat
      cd /home/noventadmin
      docker-compose up -d

runcmd:
  - mkdir -p /home/noventadmin/logstash/pipeline
  - mkdir -p /home/noventadmin/logstash/config
  - mkdir -p /home/noventadmin/filebeat
  - mkdir -p /home/noventadmin/logs
  - chown -R noventadmin:noventadmin /home/noventadmin
  - systemctl enable docker
  - systemctl start docker
  - bash /home/noventadmin/setup-elk.sh 