name: erp-backend

services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: erp-backend
    ports:
      - "1303:1303"
    networks:
      - elk
      - default
    environment:
      - NODE_ENV=development
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_USER=postgres
      - DB_PASSWORD=xderensa
      - DB_NAME=erp_db
      - DATABASE_URL=postgresql://postgres:xderensa@postgres:5432/erp_db?schema=public
    depends_on:
      - postgres
    entrypoint: ["/bin/sh", "-c", "/init.sh && bun seed"]

    develop:
      watch:
        - action: sync
          path: .
          target: /app
          ignore:
            - node_modules/
            - .git/
            - .gitignore
        - action: rebuild
          path: package.json

  postgres:
    image: postgres:16
    environment:
      POSTGRES_DB: erp_db
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: xderensa
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.17.0
    environment:
      - discovery.type=single-node
    ports:
      - "9200:9200"
    volumes:
      - ./elk/config/elasticsearch.yml:/usr/share/elasticsearch/config/elasticsearch.yml
      - esdata:/usr/share/elasticsearch/data
    networks:
      - elk

  logstash:
    image: docker.elastic.co/logstash/logstash:7.17.0
    volumes:
      - ./logstash.conf:/usr/share/logstash/pipeline/logstash.conf
    ports:
      - "5044:5044"
    depends_on:
      - elasticsearch
    networks:
      - elk

  kibana:
    image: docker.elastic.co/kibana/kibana:7.17.0
    ports:
      - "5601:5601"
    volumes:
      - ./elk/config/kibana.yml:/usr/share/kibana/config/kibana.yml
    depends_on:
      - elasticsearch
    networks:
      - elk

  cloudflared:
    image: cloudflare/cloudflared:latest
    container_name: cloudflared
    command: tunnel --no-autoupdate run elk-tunnel
    networks:
      - elk
    volumes:
      - ./cloudflared:/etc/cloudflared
    restart: unless-stopped

volumes:
  postgres_data:
  esdata:

networks:
  elk:
  default:
